/**********************************************
 Globals & Utilities
**********************************************/

body {
  font-family: $body-font;
  font-weight: 400;
  color: $black;
}

.chevron-arrow-right:after {
  content: '';
  display: inline-block;
  border-right: 2px solid $black;
  border-bottom: 2px solid $black;
  @include size(6px);
  transform: rotate(45deg) translateY(-3px);
  margin-left: 5px;
}

.wrapper {
  overflow: hidden;
  position: relative;
  margin-top: $header-height-mobile;

  @include breakpoint('lg') {
    margin-top: $header-height;
  }
}

.padding-100 {
  padding: 60px 0;

  @include breakpoint('sm') {
    padding: 75px 0;
  }

  @include breakpoint('md') {
    padding: 90px 0;
  }

  @include breakpoint('lg') {
    padding: 100px 0;
  }
}

.margin-100 {
  margin: 60px 0;

  @include breakpoint('sm') {
    margin: 75px 0;
  }

  @include breakpoint('md') {
    margin: 90px 0;
  }

  @include breakpoint('lg') {
    margin: 100px 0;
  }
}

.padding-bottom-100 {
  padding-bottom: 60px;

  @include breakpoint('sm') {
    padding-bottom: 75px;
  }

  @include breakpoint('md') {
    padding-bottom: 90px;
  }

  @include breakpoint('lg') {
    padding-bottom: 100px;
  }
}

.margin-bottom-100 {
  margin-bottom: 60px;

  @include breakpoint('sm') {
    margin-bottom: 75px;
  }

  @include breakpoint('md') {
    margin-bottom: 90px;
  }

  @include breakpoint('lg') {
    margin-bottom: 100px;
  }
}

.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.text-center {
  text-align: center;
}

img.adapt {
  width: 100%;
}

.spacer-40 {
  height: 30px;

  @include breakpoint(sm) {
    height: 40px;
  }
}

.spacer-60 {
  height: 40px;

  @include breakpoint(sm) {
    height: 60px;
  }
}

.absolute-0 {
  @include position(absolute, 0);
}

.relative {
  position: relative;
}

// Generates utility classes for colored backgrounds
$donut-colors: (
  black: $black,
  soft-black: $soft-black,
  bright-black: $bright-black,
  cream: $cream,
  periwinkle: $periwinkle,
  pink: $pink,
  green: $green,
  sky: $sky,
  chocolate: $chocolate,
  schoolbus: $schoolbus,
  hotbutton: $hotbutton,
  dough: $dough,
);

@each $key in map-keys($donut-colors) {
  $color: map-get($donut-colors, $key);

  .bkg--#{$key} {
    background: $color;
    color: adapt_text($color);
  }
}

svg.donut-icon {
  width: 60px;
  height: auto;
}

@each $key in map-keys($donut-colors) {
  $color: map-get($donut-colors, $key);

  svg.donut-icon.#{$key} {
    path:not(.shape) {
      stroke: $color;
    }
    path.shape {
      fill: $color;
    }
  }
}
